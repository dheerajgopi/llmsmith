[tool.poetry]
name = "LLMSmith"
version = "0.3.0"
description = "Lightweight Python library designed for developing functionalities powered by Large Language Models (LLMs)"
authors = ["Dheeraj Gopinath <dheeraj.gopinath@gmail.com>"]
readme = "README.md"
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[tool.poetry.dependencies]
python = ">=3.9,<3.13"
openai = {version = "^1.23.2", optional = true}
anthropic = {version = "^0.19.2", optional = true}
google-generativeai = {version = "^0.4.0", optional = true}
chromadb-client = {version = "^0.4.25.dev0", optional = true}
onnxruntime = {version = "^1.17.1", optional = true}
protobuf = {version = "3.20.3", optional = true}
tokenizers = {version = "^0.15.2", optional = true}
python-dotenv = "^1.0.1"
qdrant-client = {version = "^1.8.2", optional = true}

[tool.poetry.extras]
openai = ["openai"]
claude = ["anthropic"]
gemini = ["google-generativeai"]
chromadb = ["chromadb-client", "onnxruntime", "protobuf", "tokenizers"]
qdrant = ["qdrant-client"]
all = ["openai", "anthropic", "google-generativeai", "chromadb-client", "onnxruntime", "protobuf", "tokenizers", "qdrant-client"]

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
ruff = "^0.3.2"
black = "^24.2.0"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
sphinx = "^7.2.6"
sphinx-rtd-theme = "^2.0.0"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest = "^8.1.1"

[tool.pytest.ini_options]
testpaths = [
    "tests"
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
